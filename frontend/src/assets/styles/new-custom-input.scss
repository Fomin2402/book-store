@import "new-global-variables";
@import "new-color-palette";

$small-height: 32px;

// --------------------------------------------------------------------------------------------------
//                                        Simple input field
// --------------------------------------------------------------------------------------------------

.new-label {
  padding-bottom: 10px;
}

.new-field-input {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: relative;

  input.field {
    width: 100%;
    padding: 12px;
    box-sizing: border-box;
    border: $classic-input-border;
    border-radius: $classic-input-border-radius;
    background: $input-background-color;
    transition: $transition;

    &.radius-second {
      border-radius: $second-input-border-radius;
    }

    &:focus,
    &.ng-touched.ng-invalid:focus {
      border-color: $main-color !important;
    }

    &.ng-touched.ng-invalid {
      border-color: $red-notification;

      &.no-error {
        border-color: $input-border-color;
      }
    }

    &::placeholder {
      border-color: $input-placeholder-color;
    }
  }

  &.with-errors {
    position: relative;
    padding-bottom: 32px;

    .field-error {
      position: absolute;
      bottom: 10px;
      padding-top: 8px;
      color: $red-notification;
    }
  }
}

@media screen and #{$max-height} {
  .field-input input.field.resize {
    height: $small-height;
  }

  .label {
    padding-bottom: 5px;
  }
}

// --------------------------------------------------------------------------------------------------
//                                        Checkbox input field
// --------------------------------------------------------------------------------------------------

.new-check {
  cursor: pointer;
  position: relative;
  width: 100%;
  transform: translate3d(0, 0, 0);

  svg {
    position: relative;
    margin-right: 15px;
    z-index: 1;
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke: #c8ccd4;
    stroke-width: 1;
    transform: translate3d(0, 0, 0);
    transition: all 0.2s ease;

    path {
      stroke-dasharray: 60;
      stroke-dashoffset: 0;
    }
    polyline {
      stroke-dasharray: 22;
      stroke-dashoffset: 66;
    }

    border-radius: 4px;
    background: $white;
    &:hover {
      background: $input-background-color;
      stroke: $main-color;
    }
  }
}

#cbx:checked + .new-check {
  svg {
    stroke: $main-color;

    path {
      stroke-dashoffset: 60;
      transition: all 0.3s linear;
    }

    polyline {
      stroke-dashoffset: 42;
      transition: all 0.2s linear;
      transition-delay: 0.15s;
    }
  }
}

// --------------------------------------------------------------------------------------------------
//                                        Radio input field
// --------------------------------------------------------------------------------------------------
/*
.new-enum-type-radio {
    position: relative;
    display: flex;
    cursor: pointer;
    font-size: 22px;
    margin-right: 10px;
    margin-bottom: 30px;

    // Hide the browser's default radio button
    input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }
}

// Create a custom radio button
.checkmark {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 18px;
    padding: 10px 18px;
    border: $border;
    background-color: $white;
    color: $black;
    transition: $transition;
}

// On mouse-over, add a grey background color
.new-enum-type-radio:hover input ~ .checkmark {
    color: $main-blue;
    transition: $transition;
}

// When the radio button is checked, add a blue background
.new-enum-type-radio input:checked ~ .checkmark {
    background-color: $main-blue;
    color: $white;
    transition: $transition;
}

.new-enum-type-radio input:disabled ~ .checkmark {
    cursor: default;
    background-color: $light-grey;
    color: $soft-grey;
    border-color: $soft-grey;
    transition: $transition;
}
*/
